{"version":3,"file":"static/chunks/0.js","sources":["webpack:///./components/lib/Radio/Group.tsx","webpack:///./components/lib/Radio/index.tsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { isUndefined, isFunction } from 'muka'\r\nimport { getClassName } from '../utils'\r\nimport Radio, { IRadioType } from './index'\r\n\r\nexport interface IRadioGroupOptions {\r\n    label: string\r\n    value: string | number | boolean\r\n    className?: string\r\n}\r\n\r\nexport interface IRadioGroupProps {\r\n    className?: string\r\n    type?: IRadioType\r\n    value?: string | number | boolean\r\n    options: IRadioGroupOptions[]\r\n    onChange?: (value: string | number | boolean) => void\r\n}\r\n\r\ninterface IState {\r\n    value: any\r\n}\r\n\r\nconst prefixClass = 'radio_group'\r\n\r\nexport default class RadioGroup extends Component<IRadioGroupProps, IState> {\r\n\r\n    constructor(props: IRadioGroupProps) {\r\n        super(props)\r\n        this.state.value = props.value\r\n    }\r\n\r\n    public static defaultProps: IRadioGroupProps = {\r\n        options: []\r\n    }\r\n\r\n    public state: IState = {\r\n        value: ''\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const { className, options, type } = this.props\r\n        const { value } = this.state\r\n        \r\n        return (\r\n            <div className={getClassName(`${prefixClass}`, className)}>\r\n                {\r\n                    options.map((i, index: number) => {\r\n                        return <Radio className={i.className} key={index} type={type} onChange={this.handleRadioChange.bind(this, i.value)} checked={i.value === value}>{i.label}</Radio>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    public componentWillReceiveProps(nextProps: IRadioGroupProps) {\r\n        const { value } = this.props\r\n        if (!isUndefined(nextProps.value) && nextProps.value !== value) {\r\n            this.setState({\r\n                value: nextProps.value\r\n            })\r\n        }\r\n    }\r\n\r\n    private handleRadioChange(value: string | number | boolean) {\r\n        const { onChange } = this.props\r\n        this.setState({ value })\r\n        if (isFunction(onChange)) {\r\n            onChange(value)\r\n        }\r\n    }\r\n}\r\n","import React, { CSSProperties, Component } from 'react'\r\nimport { isFunction, isBool, isUndefined } from 'muka'\r\nimport RadioGroup from './Group'\r\nimport { getClassName, prefix } from '../utils'\r\nimport Icon from '../Icon'\r\n\r\nexport type IRadioType = 'square' | 'button' | 'circular'\r\n\r\nexport interface IRadioProps {\r\n    className?: string\r\n    defaultChecked?: boolean\r\n    checked?: boolean\r\n    onChange?: (val: boolean) => void\r\n    type?: IRadioType\r\n    style?: CSSProperties\r\n    children?: string | JSX.Element\r\n}\r\n\r\ninterface IState {\r\n    status: boolean\r\n}\r\n\r\nconst prefixClass = 'radio'\r\n\r\nexport default class Radio extends Component<IRadioProps, IState> {\r\n\r\n    constructor(props: IRadioProps) {\r\n        super(props)\r\n        this.state.status = props.checked || props.defaultChecked || false\r\n    }\r\n\r\n    public static Group = RadioGroup\r\n\r\n    public state = {\r\n        status: false\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const { className, children, checked, type, style } = this.props\r\n        const { status } = this.state\r\n        return (\r\n            <div\r\n                className={getClassName(`${prefixClass} ${(isBool(checked) ? checked : status) ? prefix + 'active' : ''} ${type ? prefix + type : ''}`, className)}\r\n                style={style}\r\n                onClick={this.handleClick}\r\n            >\r\n                <div className=\"flex\">\r\n                    {(type === 'square' || type === 'circular') && (\r\n                        <div className={getClassName(`${prefixClass}_btn`)}>\r\n                            {(isBool(checked) ? checked : status) && <Icon className=\"icon\" icon=\"md-checkmark\" fontSize=\"0.8rem\" />}\r\n                        </div>\r\n                    )}\r\n                    {\r\n                        isUndefined(type) && (\r\n                            <div className={getClassName(`${prefixClass}_core`)}>\r\n                                <div className=\"flex_center\" style={{ width: '100%', height: '100%' }}>\r\n                                    <div className={getClassName(`${prefixClass}_core_circle ${status ? prefix + prefixClass + '_show' : prefix + prefixClass + '_hide'}`)} />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <span className={getClassName(`${prefixClass}_label`)}>\r\n                        {children}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    public componentWillReceiveProps(nextProps: IRadioProps) {\r\n        const { checked } = this.props\r\n        if (isBool(nextProps.checked) && checked !== nextProps.checked) {\r\n            this.setState({\r\n                status: nextProps.checked\r\n            })\r\n        }\r\n    }\r\n\r\n    private handleClick = () => {\r\n        const { checked, onChange } = this.props\r\n        const { status } = this.state\r\n        if ((isBool(checked) && checked) || status) return\r\n        if (isFunction(onChange)) {\r\n            onChange(isBool(checked) ? !checked : !status)\r\n        }\r\n        this.setState({\r\n            status: isBool(checked) ? !checked : !status\r\n        })\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAoBA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AADA;AACA;AARA;AAFA;AAGA;AACA;;;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;AA7CA;AACA;AADA;AAQA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AACA;AACA;AAkBA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AADA;AACA;AARA;AAoDA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA7DA;AAFA;AAGA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAMA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;AApDA;AACA;AADA;AACA;;;;;A","sourceRoot":""}